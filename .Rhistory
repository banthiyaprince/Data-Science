mymovies<-read.csv('C://Users//lenovo//Desktop//R studio//Data Science Assignments//Association Rules//my_movies.csv')
mymovies<-mymovies[,6:15]
library(arules)
rules<-apriori(mymovies)
summary(rules)
rules<-apriori(mymovies,parameter = list(minlen=2,maxlen=3,support=0.7))
arules::inspect(rules)
View(mymovies)
rules<-apriori(mymovies,parameter = list(minlen=2,maxlen=3,support=0.7),appearance = list(rhs=c('Gladiator=yes'),default='lhs')
rules<-apriori(mymovies,parameter = list(minlen=2,maxlen=3,support=0.7),appearance = list(rhs=c('Gladiator=yes'),default='lhs'))
rules<-apriori(mymovies,parameter = list(minlen=2,maxlen=3,support=0.7),appearance = list(rhs=c('Gladiator=1'),default='lhs'))
rules<-apriori(mymovies,parameter = list(minlen=2,maxlen=3,support=0.7),appearance = list(rhs=c('Gladiator= 1'),default='lhs'))
rules<-apriori(mymovies,parameter = list(minlen=2,maxlen=3,support=0.7),appearance = list(rhs=c('Gladiator= 1'), default='lhs'))
rules<-apriori(mymovies,parameter = list(minlen=2,maxlen=3,support=0.7))
rules<-apriori(mymovies,parameter = list(minlen=2,maxlen=3,support=0.7),appearance = list(rhs('mymovies$Gladiator=1'),lhs=default)
rules<-apriori(mymovies,parameter = list(minlen=2,maxlen=3,support=0.7),appearance = list(rhs('mymovies$Gladiator=1'),lhs=default))
rules<-apriori(mymovies,parameter = list(minlen=2,maxlen=3,support=0.7),appearance = list(rhs('mymovies$Gladiator=1'),lhs='default'))
rules<-apriori(mymovies,parameter = list(minlen=2,maxlen=3,support=0.7),appearance = list(rhs=c('mymovies$Gladiator=1','mymovies$Gladiator=0'),control=list(verbose=F)))
Titanic<-read.csv('C://Users//lenovo//Documents//R codes//Titanic.csv')
Titanic<-Titanic[,-c(1)]
rules<-apriori(Titanic)
arules::inspect(rules)
rules.sort<-sort(rules,by='lift')
arules::inspect(rules.sort)
View(Titanic)
rules<-apriori(Titanic,parameter = list(support=0.1,confidence=0.1),appearance = list(rhs=c('survived=no','survived=yes'),control=list(verbose=F)
rules<-apriori(Titanic,parameter = list(support=0.1,confidence=0.1),appearance = list(rhs=c('survived=no','survived=yes'),control=list(verbose=F))
##my movies##
mymovies<-read.csv('C://Users//lenovo//Desktop//R studio//Data Science Assignments//Association Rules//my_movies.csv')
View(mymovies)
mymovies<-mymovies[,6:15]
library(arules)
rules<-apriori(mymovies)
rules<-apriori(mymovies,parameter = list(support=0.5,confidence=0.5,minlen=2,maxlen=5))
arules::inspect(rules)
inspect(rules)
inspect(rules)
rules<-apriori(mymovies,parameter = list(support=0.8,confidence=0.8,minlen=2,maxlen=5))
rules1<-apriori(mymovies,parameter = list(support=0.8,confidence=0.8,minlen=2,maxlen=5))
rules1<-apriori(mymovies,parameter = list(support=0.8,confidence=0.8,minlen=2,maxlen=4))
rules1<-apriori(mymovies,parameter = list(support=0.8,confidence=0.8,minlen=2,maxlen=3))
rules1<-apriori(mymovies,parameter = list(support=0.7,confidence=0.8,minlen=2,maxlen=3))
rules1<-apriori(mymovies,parameter = list(support=0.9,confidence=0.9,minlen=2,maxlen=3))
rules1<-apriori(mymovies,parameter = list(support=1,confidence=1,minlen=2,maxlen=3))
book<-read.csv('C://Users//lenovo//Desktop//R studio//Data Science Assignments//Association Rules//book.csv')
library(arules)
rules<-apriori(book)
arules::inspect(rules)
rulessort<-sort(rules,by='lift')
arules::inspect(rulessort)
rules<-apriori(book,parameter = list(support=0.2,confidence=0.3))
rules<-apriori(book,parameter = list(support=0.5,confidence=0.5))
rules<-apriori(book,parameter = list(support=0.8,confidence=0.5))
rules<-apriori(book,parameter = list(support=0.8,confidence=0.5,minlen=2,maxlen=3))
inspect(rules)
View(book)
summary(book)
## Book##
book<-read.csv('C://Users//lenovo//Desktop//R studio//Data Science Assignments//Association Rules//book.csv',header = T,colClasses = 'factor')
summary(book)
library(arules)
rules<-apriori(book)
rulessort<-sort(rules,by='lift')
rules<-apriori(book,parameter = list(support=0.2,confidence=0.3))
d<-dist(crimedata1,method = 'euclidean')
## Crime Data ###
crimedata<-read.csv("C://Users//lenovo//Desktop//R studio//Data Science Assignments//Clustering//crime_data.csv")
crimedata1<-scale(crimedata[,2:5])
d<-dist(crimedata1,method = 'euclidean')
as.matrix(d)
fit<-hclust(d,method = 'manhattan')
d<-dist(crimedata1,method = 'euclidean')
as.matrix(d)
fit<-hclust(d,method = 'centroid')
library(factoextra)
fviz_dend(fit)
fviz_dend(fit,k=5,color_labels_by_k = TRUE,rect = TRUE)
View(cluster)
cluster<-cutree(fit,k=5)
View(cluster)
finaloutput<-data.frame('state'=crimedata[,1],'cluster'=cluster)
View(finaloutput)
fviz_dend(fit,k=5,type = 'phylogenic',repel = TRUE)
d<-dist(crimedata1,method = "canberra")
as.matrix(d)
fit<-hclust(d,method = "median")
library(factoextra)
fviz_dend(fit)
fviz_dend(fit,k=5,color_labels_by_k = TRUE,rect = TRUE)
cluster<-cutree(fit,k=5)
View(cluster)
### East West Airlines###
eastwestairlines<-read.csv("C://Users//lenovo//Desktop//R studio//Data Science Assignments//Clustering//EastWestAirlines.csv")
library(factoextra)
fviz_nbclust(eastwestairlines[,-1],kmeans,method = 'wss')+labs(sutitle='elbow method')
km<-kmeans(eastwestairlines[,-1],4)
km$cluster
km$centers
clust<-data.frame('ID'=eastwestairlines[,1],'cluster'=km$cluster)
View(clust)
km<-kmeans(eastwestairlines[,-1],3)
km$cluster
km$centers
clust<-data.frame('ID'=eastwestairlines[,1],'cluster'=km$cluster)
View(clust)
km<-kmeans(eastwestairlines[,-1],4)
km$cluster
km$centers
clust<-data.frame('ID'=eastwestairlines[,1],'cluster'=km$cluster)
View(clust)
km<-kmeans(eastwestairlines[,-1],5)
km$cluster
km$centers
clust<-data.frame('ID'=eastwestairlines[,1],'cluster'=km$cluster)
View(clust)
install.packages("arulesViz")
library(arules)
library(arulesViz)
books1<-read.csv('C://Users//lenovo//Desktop//R studio//Data Science Assignments//Association Rules//book.csv')
View(books1)
books2 <- apriori(as.matrix(books1),parameter = list(support=0.002,confidence=0.5,minlen=2))
sortbooks <-sort(books2,by="confidence",decreasing = "TRUE")
plot(sortbooks[1:15],method = "graph",control = list(type="list"))
plot(sortbooks[1:15],method = "grouped",control = list(type="list"))
plot(sortbooks[1:15],method = "paracoord",control = list(type="list"))
plot(sortbooks[1:15],method = "matrix",control = list(type="list"))
p <- head(sortbooks)
detach(package:tm, unload=TRUE)
library(arules)
inspect(p)
books3<-apriori(as.matrix(books1),parameter = list(support=0.002,confidence=0.5,minlen=3))
sortbooks1 <-sort(books3,by="confidence",decreasing = "TRUE")
plot(sortbooks1[1:15],method = "graph",control = list(type="list"))
plot(sortbooks1[1:15],method = "grouped",control = list(type="list"))
plot(sortbooks1[1:15],method = "paracoord",control = list(type="list"))
plot(sortbooks1[1:15],method = "matrix",control = list(type="list"))
inspect(sortbooks1[1:10])
books4<-apriori(as.matrix(books1),parameter = list(support=0.003,confidence=0.8,minlen=2))
sortbooks2 <-sort(books4,by="confidence",decreasing = "TRUE")
plot(sortbooks2[1:15],method = "graph",control = list(type="list"))
plot(sortbooks2[1:15],method = "grouped",control = list(type="list"))
plot(sortbooks2[1:15],method = "paracoord",control = list(type="list"))
plot(sortbooks2[1:15],method = "matrix",control = list(type="list"))
inspect(sortbooks2[1:10])
books5<-apriori(as.matrix(books1),parameter = list(support=0.003,confidence=0.8,minlen=3))
sortbooks3<-sort(books4,by="confidence",decreasing = "TRUE")
plot(sortbooks3[1:15],method = "graph",control = list(type="list"))
plot(sortbooks3[1:15],method = "grouped",control = list(type="list"))
plot(sortbooks3[1:15],method = "paracoord",control = list(type="list"))
plot(sortbooks3[1:15],method = "matrix",control = list(type="list"))
## Movies###
movies <- read.transactions("C://Users//lenovo//Desktop//R studio//Data Science Assignments//Association Rules//my_movies.csv", format="basket")
View(movies)
View(movies)
str(movies)
movies1 <- read.csv("C://Users//lenovo//Desktop//R studio//Data Science Assignments//Association Rules//my_movies.csv")
View(movies1)
movies1 <-movies1[,6:11]
View(movies1)
write.csv(movies1,'movi.csv')
movi2 <- read.csv("C:\\Users\\USER\\Documents\\movi.csv")
movi2 <- read.csv("C://Users//lenovo//Desktop//R studio//Data Science Assignments//Association Rules//my_movies.csv")
movi2 <-movi2[2:7]
rulem <- apriori(as.matrix(movi2),parameter = list(supp=0.001,conf=0.50))
inspect(rulem[1:10])
inspect(rulem)
rulem <- apriori(as.matrix(movi2),parameter = list(supp=0.001,conf=0.50))
movi2 <-movi2[2:7]
movi2 <- read.csv("C://Users//lenovo//Desktop//R studio//Data Science Assignments//Association Rules//my_movies.csv")
movi2 <-movi2[2:7]
rulem <- apriori(as.matrix(movi2),parameter = list(supp=0.001,conf=0.50))
plot(rulem,method = "graph",control = list(type="list"))
## Movies###
movies <- read.transactions("C://Users//lenovo//Desktop//R studio//Data Science Assignments//Association Rules//my_movies.csv", format="basket")
View(movies)
str(movies)
movi2 <- read.csv("C://Users//lenovo//Desktop//R studio//Data Science Assignments//Association Rules//my_movies.csv")
movi2 <-movi2[2:7]
View(movi2)
plot(movi2,method = "graph",control = list(type="list"))
plot(movi2,method = "mosaic",control = list(type="list"))
movies <- read.transactions("C:\\Users\\USER\\Downloads\\my_movies.csv", format="basket")
movies <- read.transactions("C://Users//lenovo//Desktop//R studio//Data Science Assignments//Association Rules//my_movies.csv", format="basket")
View(movies)
str(movies)
movies1 <- read.csv("C://Users//lenovo//Desktop//R studio//Data Science Assignments//Association Rules//my_movies.csv")
movies1 <-movies1[,6:11]
View(movies1)
write.csv(movies1,'movi.csv')
movi2 <- read.csv("C:\\Users\\USER\\Documents\\movi.csv")
movi2 <- read.csv("C://Users//lenovo//Desktop//R studio//Data Science Assignments//Association Rules//my_movies.csv")
movi2 <-movi2[2:7]
rulem <- apriori(as.matrix(movi2),parameter = list(supp=0.001,conf=0.50))
rulem <- apriori(as.matrix(movies1),parameter = list(supp=0.001,conf=0.50))
inspect(rulem[1:10])
plot(rulem,method = "graph",control = list(type="list"))
plot(rulem,method = "mosaic",control = list(type="list"))
plot(rulem,method = "grouped",control = list(type="list"))
plot(rulem[1:10],method = "paracoord",control = list(type="list"))
plot(rulem,method = "scatter",control = list(type="list"))
plot(rulem,method = "matrix",control = list(type="list"))
rulem1 <- apriori(as.matrix(movi2),parameter = list(supp=0.001,conf=0.80,minlen=3))
inspect(rulem)
plot(rulem1,method = "graph",control = list(type="list"))
plot(rulem1,method = "mosaic",control = list(type="list"))
plot(rulem1,method = "grouped",control = list(type="list"))
plot(rulem1,method = "paracoord",control = list(type="list"))
plot(rulem1,method = "scatter",control = list(type="list"))
plot(rulem1,method = "matrix",control = list(type="list"))
rulem1 <- apriori(as.matrix(movies1),parameter = list(supp=0.001,conf=0.80,minlen=3))
inspect(rulem)
plot(rulem1,method = "graph",control = list(type="list"))
plot(rulem1,method = "mosaic",control = list(type="list"))
plot(rulem1,method = "grouped",control = list(type="list"))
plot(rulem1,method = "paracoord",control = list(type="list"))
plot(rulem1,method = "scatter",control = list(type="list"))
plot(rulem1,method = "matrix",control = list(type="list"))
rulem2 <- apriori(as.matrix(movies1),parameter = list(supp=0.001,conf=0.80,minlen=4))
inspect(rulem2)
plot(rulem1,method = "graph",control = list(type="list"))
plot(rulem1,method = "mosaic",control = list(type="list"))
plot(rulem1,method = "grouped",control = list(type="list"))
plot(rulem1[1:10],method = "paracoord",control = list(type="list"))
plot(rulem1,method = "scatter",control = list(type="list"))
plot(rulem1,method = "matrix",control = list(type="list"))
movies <- read.transactions("C://Users//lenovo//Desktop//R studio//Data Science Assignments//Association Rules//my_movies.csv", format="basket")
View(movies)
str(movies)
movies1 <- read.csv("C://Users//lenovo//Desktop//R studio//Data Science Assignments//Association Rules//my_movies.csv")
movies1 <-movies1[,6:11]
View(movies1)
rulem <- apriori(as.matrix(movies1),parameter = list(supp=0.001,conf=0.50))
inspect(rulem[1:10])
plot(rulem,method = "graph",control = list(type="list"))
plot(rulem,method = "mosaic",control = list(type="list"))
plot(rulem,method = "grouped",control = list(type="list"))
plot(rulem[1:10],method = "paracoord",control = list(type="list"))
plot(rulem,method = "scatter",control = list(type="list"))
plot(rulem,method = "matrix",control = list(type="list"))
rulem1 <- apriori(as.matrix(movies1),parameter = list(supp=0.001,conf=0.80,minlen=3))
inspect(rulem)
plot(rulem1,method = "graph",control = list(type="list"))
plot(rulem1,method = "mosaic",control = list(type="list"))
plot(rulem1,method = "grouped",control = list(type="list"))
plot(rulem1,method = "paracoord",control = list(type="list"))
plot(rulem1,method = "scatter",control = list(type="list"))
plot(rulem1,method = "matrix",control = list(type="list"))
rulem2 <- apriori(as.matrix(movies1),parameter = list(supp=0.001,conf=0.80,minlen=4))
inspect(rulem2)
plot(rulem1,method = "graph",control = list(type="list"))
plot(rulem1,method = "mosaic",control = list(type="list"))
plot(rulem1,method = "grouped",control = list(type="list"))
plot(rulem1[1:10],method = "paracoord",control = list(type="list"))
plot(rulem1,method = "scatter",control = list(type="list"))
plot(rulem1,method = "matrix",control = list(type="list"))
